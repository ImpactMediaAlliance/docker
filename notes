docker-compose.yml in the root of your project directory
Dockerfile can go in subdirectories
docker compose up
docker compose down
docker pull - pulls images remotely if nothing stored locally
docker build
docker run -it --name [name]
-it is -i and -t tag ?
--rm removes itself after container is stopped
docker start [container id or name]
docker stop [container id or name]

docker info

Containers
docker ps - view active containers (or docker container ls)
docker ps -a - view all containers (or docker container ls -a)
docker ps -l - view last container created (note: small L not a 1) (or docker container -l)

Running Containers
exit - to exit a container
Ctrl-P Ctrl-Q - Detaching from the container without stopping

Images
docker images - view images
docker purge?
Run the container bash, using the following command.
docker exec -it <container_name> bash

docker rm [id], docker rm -f [name]
docker rmi [image name]

SQL Server for Linux
https://hub.docker.com/r/microsoft/mssql-server-linux/
https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker?view=sql-server-2017&pivots=cs1-bash

Express Edition
docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=MyPass@word" -e "MSSQL_PID=Express" \
-p 1439:1433 -d --name=sql -v //c/mount/sql:/var/opt/mssql/data microsoft/mssql-server-linux:latest

connection string: 
Server=localhost,1433;Initial Catalog=MyDb;Integrated Security=True;User Id=sa;Password=MyPass@word;

Connect to SQL Server
bash
sudo docker exec -it [name] "bash"

sqlcmd
(leave off -P to be prompted for password)
sqlcmd -S localhost -U SA -P '<YourPassword>'
/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P '<YourPassword>' 

Name of all databases
SELECT Name from sys.Databases

or?
sqlcmd -U sa â€“S <YourIP>,<Port>

Volumes
docker volume ls
docker volume create [name]
docker volume rm [name]
